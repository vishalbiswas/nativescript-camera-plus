import './async-await';
import { CameraPlusBase, ICameraOptions, ICameraPlusEvents, IChooseOptions, IVideoOptions } from './camera-plus.common';
export { CameraVideoQuality } from './camera-plus.common';
export declare class CameraPlus extends CameraPlusBase {
    private _camera;
    camera: android.hardware.Camera;
    cameraId: any;
    autoFocus: boolean;
    flashOnIcon: string;
    flashOffIcon: string;
    toggleCameraIcon: string;
    confirmPhotos: boolean;
    saveToGallery: boolean;
    takePicIcon: string;
    galleryIcon: string;
    insetButtons: boolean;
    insetButtonsPercent: number;
    enableVideo: boolean;
    isRecording: boolean;
    events: ICameraPlusEvents;
    private _nativeView;
    private _owner;
    private _mediaRecorder;
    private _textureSurface;
    private _textureView;
    private _surface;
    private _flashBtn;
    private _takePicBtn;
    private _toggleCamBtn;
    private _galleryBtn;
    private _videoOptions;
    private _videoPath;
    readonly _context: any;
    constructor();
    private isVideoEnabled;
    createNativeView(): any;
    private _onLayoutChangeFn;
    private _onLayoutChangeListener;
    initNativeView(): void;
    disposeNativeView(): void;
    takePicture(options?: ICameraOptions): void;
    private releaseCamera;
    toggleCamera(): void;
    record(options?: IVideoOptions): Promise<void>;
    stop(): void;
    stopRecording(): void;
    private _getCamcorderProfile;
    private _prepareVideoRecorder;
    private _getOutputMediaFile;
    private _releaseMediaRecorder;
    chooseFromLibrary(options?: IChooseOptions): Promise<any>;
    toggleFlash(): void;
    requestCameraPermissions(explanation?: string): Promise<boolean>;
    hasCameraPermission(): boolean;
    requestAudioPermissions(explanation?: string): Promise<boolean>;
    hasAudioPermission(): boolean;
    requestStoragePermissions(explanation?: string): Promise<boolean>;
    hasStoragePermissions(): boolean;
    requestVideoRecordingPermissions(explanation?: string): Promise<boolean>;
    hasVideoRecordingPermissions(): boolean;
    getCurrentCamera(): 'front' | 'rear';
    isCameraAvailable(): boolean;
    getNumberOfCameras(): number;
    hasFlash(): boolean;
    getFlashMode(): string;
    private _ensureCorrectFlashIcon;
    private _ensureFocusMode;
    private _initFlashButton;
    private _initGalleryButton;
    private _initToggleCameraButton;
    private _initTakePicButton;
    private _initDefaultButtons;
    private _initCamera;
    private _setCameraDisplayOrientation;
    private _releaseCameraAndPreview;
    private _onPictureTaken;
    private _finishSavingAndConfirmingPicture;
    private _savePicture;
    private _saveImageToDisk;
    private _addPicToGallery;
}
